{"version":3,"sources":["redux/files/file.types.js","redux/files/file.reducer.js","redux/root.reducer.js","redux/store.js","components/FormInput/FormInput.component.jsx","components/CustomButton/CustomButton.component.jsx","redux/files/file.actions.js","pages/HomePage/HomePage.component.jsx","App.js","index.js"],"names":["FileActionTypes","INITIAL_STATE","fileText","loading","fileError","download","fileReducer","state","action","type","payload","combineReducers","file","middlewares","logger","thunk","store","createStore","rootReducer","applyMiddleware","FormInput","handleChange","label","otherProps","className","onChange","value","length","CustomButton","children","handleClick","onClick","apiUrl","setCurrentFile","data","removeCurrentFile","downloadSuccess","setFileError","HomePage","e","setState","target","name","selectFile","fileForUpload","files","replaceTextClient","props","replaceInFile","forReplace","replaceWith","uploadFileClient","FormData","append","uploadFile","this","getFile","status","ToastsStore","info","message","error","text","replace","split","removeFile","downloadAsWord","downloadAsPDF","map","el","i","key","highlightClassName","searchWords","autoEscape","textToHighlight","caseSensitive","React","Component","connect","dispatch","axios","post","withCredentials","then","res","catch","err","response","get","window","open","delete","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cea645a9.chunk.js","sourcesContent":["export const FileActionTypes = {\r\n  SET_FILE: 'SET_FILE',\r\n  REMOVE_FILE: 'REMOVE_FILE',\r\n  DOWNLOAD_SUCCESFUL: 'DOWNLOAD_SUCCESSFUL',\r\n  FILE_ERROR: 'FILE_ERROR'\r\n};\r\n","import { FileActionTypes } from './file.types';\r\n\r\nconst INITIAL_STATE = {\r\n  fileText: null,\r\n  loading: true,\r\n  fileError: null,\r\n  download: null\r\n};\r\n\r\nconst fileReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FileActionTypes.SET_FILE:\r\n      return {\r\n        ...state,\r\n        fileText: action.payload,\r\n        loading: false,\r\n        fileError: null\r\n      };\r\n    case FileActionTypes.REMOVE_FILE:\r\n      return {\r\n        ...state,\r\n        fileText: null,\r\n        loading: false,\r\n        fileError: null\r\n      };\r\n    case FileActionTypes.FILE_ERROR:\r\n      return {\r\n        ...state,\r\n        fileText: null,\r\n        loading: false,\r\n        fileError: action.payload\r\n      };\r\n    case FileActionTypes.DOWNLOAD_SUCCESFUL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        fileError: null,\r\n        download: 'Download is succesfull'\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fileReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport fileReducer from './files/file.reducer';\r\n\r\nexport default combineReducers({\r\n  file: fileReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [logger, thunk];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nimport './FormInput.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n  return (\r\n    <div className='group'>\r\n      <input className='form-input' onChange={handleChange} {...otherProps} />\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length > 0 ? 'shrink' : ''\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\n\r\nimport './CustomButton.styles.scss';\r\n\r\nconst CustomButton = ({ children, handleClick, ...otherProps }) => (\r\n  <button className='custom-button' onClick={handleClick} {...otherProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;\r\n","import axios from 'axios';\r\n\r\nimport { FileActionTypes } from './file.types';\r\n\r\nconst apiUrl = '/api/v1/files';\r\n\r\n// Axios route handlers\r\nexport const uploadFile = file => dispatch => {\r\n  axios\r\n    .post(`${apiUrl}/`, file, { withCredentials: true })\r\n    .then(res => dispatch(setCurrentFile(res.data.text)))\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\nexport const getFile = () => dispatch => {\r\n  axios\r\n    .get(`${apiUrl}/`, { withCredentials: true })\r\n    .then(res => dispatch(setCurrentFile(res.data)))\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\nexport const removeFile = () => dispatch => {\r\n  axios\r\n    .delete(`${apiUrl}/`, { withCredentials: true })\r\n    .then(() => dispatch(removeCurrentFile()))\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\nexport const replaceInFile = (forReplace, replaceWith) => dispatch => {\r\n  axios\r\n    .post(\r\n      `${apiUrl}/text`,\r\n      { forReplace, replaceWith },\r\n      { withCredentials: true }\r\n    )\r\n    .then(res => dispatch(setCurrentFile(res.data)))\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\nexport const downloadAsWord = () => dispatch => {\r\n  axios\r\n    .get(`${apiUrl}/word`, { withCredentials: true })\r\n    .then(() => {\r\n      window.open(`${apiUrl}/word`);\r\n      dispatch(downloadSuccess());\r\n    })\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\nexport const downloadAsPDF = () => dispatch => {\r\n  axios\r\n    .get(`${apiUrl}/pdf`, { withCredentials: true })\r\n    .then(() => {\r\n      window.open(`${apiUrl}/pdf`);\r\n      dispatch(downloadSuccess());\r\n    })\r\n    .catch(err => dispatch(setFileError(err.response.data)));\r\n};\r\n\r\n// State handling functions\r\nconst setCurrentFile = data => {\r\n  return {\r\n    type: FileActionTypes.SET_FILE,\r\n    payload: data\r\n  };\r\n};\r\n\r\nconst removeCurrentFile = () => {\r\n  return {\r\n    type: FileActionTypes.REMOVE_FILE\r\n  };\r\n};\r\n\r\nconst downloadSuccess = () => {\r\n  return {\r\n    type: FileActionTypes.DOWNLOAD_SUCCESFUL\r\n  };\r\n};\r\n\r\nconst setFileError = data => {\r\n  return {\r\n    type: FileActionTypes.FILE_ERROR,\r\n    payload: data\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './HomePage.styles.scss';\r\n\r\n// Components\r\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\r\nimport Highlighter from 'react-highlight-words';\r\nimport FormInput from '../../components/FormInput/FormInput.component';\r\nimport CustomButton from '../../components/CustomButton/CustomButton.component';\r\n\r\n// Actions\r\nimport {\r\n  uploadFile,\r\n  getFile,\r\n  replaceInFile,\r\n  downloadAsWord,\r\n  downloadAsPDF,\r\n  removeFile\r\n} from '../../redux/files/file.actions';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      fileForUpload: null,\r\n      forReplace: '',\r\n      replaceWith: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.fileText) {\r\n      this.props.getFile();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // set up toasts for errors\r\n    if (this.props.fileError) {\r\n      this.props.fileError.status === 'fail'\r\n        ? ToastsStore.info(this.props.fileError.message)\r\n        : ToastsStore.error(this.props.fileError.message);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  selectFile = e => {\r\n    this.setState({ fileForUpload: e.target.files[0] });\r\n  };\r\n\r\n  replaceTextClient = () => {\r\n    this.props.replaceInFile(this.state.forReplace, this.state.replaceWith);\r\n\r\n    this.setState({ forReplace: '', replaceWith: '' });\r\n  };\r\n\r\n  uploadFileClient = () => {\r\n    const data = new FormData();\r\n    data.append('wordfile', this.state.fileForUpload);\r\n\r\n    this.props.uploadFile(data);\r\n  };\r\n\r\n  render() {\r\n    let text;\r\n    if (this.props.fileText) {\r\n      text = this.props.fileText.replace(\r\n        /<\\/p>|<\\/strong>|<strong>|<\\/a>|<a>|<\\/tr>|<tr>|<\\/td>|<td>|<table>|<\\/table>|<ul>|<\\/ul>|<\\/li>|<li>/g,\r\n        ''\r\n      );\r\n      text = text.split('<p>');\r\n    }\r\n\r\n    return (\r\n      <div className='main-page'>\r\n        <div className='sidebar'>\r\n          <FormInput\r\n            type='file'\r\n            handleChange={this.selectFile}\r\n            name='wordfile'\r\n          ></FormInput>\r\n          <CustomButton handleClick={this.uploadFileClient}>\r\n            Upload File\r\n          </CustomButton>\r\n          <CustomButton handleClick={() => this.props.removeFile()}>\r\n            Remove File\r\n          </CustomButton>\r\n          <FormInput\r\n            label='Search Text'\r\n            handleChange={this.handleChange}\r\n            name='forReplace'\r\n            value={this.state.forReplace}\r\n          />\r\n          <FormInput\r\n            label='Replace With'\r\n            name='replaceWith'\r\n            handleChange={this.handleChange}\r\n            value={this.state.replaceWith}\r\n          />\r\n          <CustomButton handleClick={this.replaceTextClient}>\r\n            Replace\r\n          </CustomButton>\r\n\r\n          <div className='button-group-download'>\r\n            <CustomButton handleClick={() => this.props.downloadAsWord()}>\r\n              Save as Word Document\r\n            </CustomButton>\r\n            <CustomButton handleClick={() => this.props.downloadAsPDF()}>\r\n              Save as PDF document\r\n            </CustomButton>\r\n          </div>\r\n        </div>\r\n        <div className='file-content'>\r\n          {text ? (\r\n            text.map((el, i) => (\r\n              <p key={i}>\r\n                <Highlighter\r\n                  highlightClassName='YourHighlightClass'\r\n                  searchWords={[this.state.forReplace]}\r\n                  autoEscape={true}\r\n                  textToHighlight={el}\r\n                  caseSensitive\r\n                />\r\n              </p>\r\n            ))\r\n          ) : (\r\n            <p>\r\n              Upload file to continue, once you are done, click on remove file\r\n            </p>\r\n          )}\r\n        </div>\r\n        <ToastsContainer store={ToastsStore} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  uploadFile: file => dispatch(uploadFile(file)),\r\n  getFile: () => dispatch(getFile()),\r\n  replaceInFile: (forReplace, replaceWith) =>\r\n    dispatch(replaceInFile(forReplace, replaceWith)),\r\n  downloadAsWord: () => dispatch(downloadAsWord()),\r\n  downloadAsPDF: () => dispatch(downloadAsPDF()),\r\n  removeFile: () => dispatch(removeFile())\r\n});\r\n\r\nconst mapStateToProps = ({ file: { fileText, fileError } }) => ({\r\n  fileText,\r\n  fileError\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\n// Components\r\nimport HomePage from './pages/HomePage/HomePage.component';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}